@inject IJSRuntime JS

@*<form id="address-form" action="" method="get" autocomplete="off">
    <p class="title">Sample address form for North America</p>
    <p class="note"><em>* = required field</em></p>
    <label class="full-field">
        <!-- Avoid the word "address" in id, name, or label text to avoid browser autofill from conflicting with Place Autocomplete. Star or comment bug https://crbug.com/587466 to request Chromium to honor autocomplete="off" attribute. -->
        <span class="form-label">Deliver to*</span>
        <input id="ship-address"
               name="ship-address"
               required
               autocomplete="off" />
    </label>
    <label class="full-field">
        <span class="form-label">Apartment, unit, suite, or floor #</span>
        <input id="address2" name="address2" />
    </label>
    <label class="full-field">
        <span class="form-label">City*</span>
        <input id="locality" name="locality" required />
    </label>
    <label class="slim-field-left">
        <span class="form-label">State/Province*</span>
        <input id="state" name="state" required />
    </label>
    <label class="slim-field-right" for="postal_code">
        <span class="form-label">Postal code*</span>
        <input id="postcode" name="postcode" required />
    </label>
    <label class="full-field">
        <span class="form-label">Country/Region*</span>
        <input id="country" name="country" required />
    </label>
    <button type="button" class="my-button">Save address</button>

    <!-- Reset button provided for development testing convenience.
    Not recommended for user-facing forms due to risk of mis-click when aiming for Submit button. -->
    <input type="reset" value="Clear form" />
</form>*@


<EditForm Model="@Address" class="mb-4" OnValidSubmit="() => HandleAddressComplete()">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div id="container">
    <div class="company-address-group mb-1">
       
        <label for="company-location" class="fw-bold">Street Address</label>
        <InputText autocomplete="off" @bind-Value="@Address.Address_1" class="form-control address mb-2" id="company-location" name="location" type="text" />

        <label for="company-address2" class="fw-bold">Address Line 2 (No PO Box)</label>
        <InputText @bind-Value="@Address.Address_2" class="form-control address2 mb-2" id="company-address2" name="address-line-2" type="text" />

        <label for="company-city" class="fw-bold">City</label>
        <InputText @bind-Value="@Address.City" class="form-control city mb-2" id="locality" name="city" type="text" />
    </div>

    <div class="company-address-group mb-3">
        
        <label for="state" class="fw-bold">State</label>
        <InputSelect @bind-Value="@Address.State" name="state/region" class="form-select state mb-2" id="state">
            <option value="">Choose a State...</option>
            <option value="Alabama">Alabama</option>
            <option value="Alaska">Alaska</option>
            <option value="Arizona">Arizona</option>
            <option value="Arkansas">Arkansas</option>
            <option value="California">California</option>
            <option value="Colorado">Colorado</option>
            <option value="Connecticut">Connecticut</option>
            <option value="Delaware">Delaware</option>
            <option value="District of Columbia">District of Columbia</option>
            <option value="Florida">Florida</option>
            <option value="Georgia">Georgia</option>
            <option value="Guam">Guam</option>
            <option value="Hawaii">Hawaii</option>
            <option value="Idaho">Idaho</option>
            <option value="Illinois">Illinois</option>
            <option value="Indiana">Indiana</option>
            <option value="Iowa">Iowa</option>
            <option value="Kansas">Kansas</option>
            <option value="Kentucky">Kentucky</option>
            <option value="Louisiana">Louisiana</option>
            <option value="Maine">Maine</option>
            <option value="Maryland">Maryland</option>
            <option value="Massachusetts">Massachusetts</option>
            <option value="Michigan">Michigan</option>
            <option value="Minnesota">Minnesota</option>
            <option value="Mississippi">Mississippi</option>
            <option value="Missouri">Missouri</option>
            <option value="Montana">Montana</option>
            <option value="Nebraska">Nebraska</option>
            <option value="Nevada">Nevada</option>
            <option value="New Hampshire">New Hampshire</option>
            <option value="New Jersey">New Jersey</option>
            <option value="New Mexico">New Mexico</option>
            <option value="New York">New York</option>
            <option value="North Carolina">North Carolina</option>
            <option value="North Dakota">North Dakota</option>
            <option value="Northern Marianas Islands">Northern Marianas Islands</option>
            <option value="Ohio">Ohio</option>
            <option value="Oklahoma">Oklahoma</option>
            <option value="Oregon">Oregon</option>
            <option value="Pennsylvania">Pennsylvania</option>
            <option value="Puerto Rico">Puerto Rico</option>
            <option value="Rhode Island">Rhode Island</option>
            <option value="South Carolina">South Carolina</option>
            <option value="South Dakota">South Dakota</option>
            <option value="Tennessee">Tennessee</option>
            <option value="Texas">Texas</option>
            <option value="Utah">Utah</option>
            <option value="Vermont">Vermont</option>
            <option value="Virginia">Virginia</option>
            <option value="Virgin Islands">Virgin Islands</option>
            <option value="Washington">Washington</option>
            <option value="West Virginia">West Virginia</option>
            <option value="Wisconsin">Wisconsin</option>
            <option value="Wyoming">Wyoming</option>
            <option value="Foreign">Foreign</option>
        </InputSelect>

        <label for="company-postal" class="fw-bold" >Postal Code</label>
        <InputText @bind-Value="@Address.Postal_Code" class="form-control zip mb-2" id="company-postal" name="postal-code" type="text" />

        <label for="country" class="fw-bold">Country</label>
        <InputText @bind-Value="@Address.Country" class="form-control country mb-4" id="country" type="text" name="country" />
    </div>

    <div class="label-error"></div>
    @if (IsEdit)
    {
        @if (SaveAddressSuccess is not null)
        { 
        <div class="alert alert-success">@SaveAddressSuccess</div>
        }
        @if (SaveAddressError is not null)
        {
            <div class="alert alert-danger">@SaveAddressError</div>
        }

        <button type="submit" class="btn btn-success btn-sm">Save Address Info</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary mb-3">Next</button>
        <p>Note: Once you hit next, you won't be able to go back and edit information. You can log in to your account and make necessary edits after the registration is complete.</p>

    }
    </div>
</EditForm>

@code {
    [Parameter]
    public Address? Address { get; set; }

    [Parameter]
    public bool IsEdit { get; set; }

    [Parameter]
    public EventCallback<bool> OnSubmit { get; set; }

    [Parameter]
    public string? SaveAddressSuccess { get; set; }

    [Parameter]
    public string? SaveAddressError { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initAutocomplete");
            StateHasChanged();
        }    
    }

    private async Task HandleAddressComplete()
    {
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(true);
        }
    }


}
