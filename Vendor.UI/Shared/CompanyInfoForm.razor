

<EditForm Model="@Company" OnValidSubmit="() => HandleCompanyComplete()">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @if (Company is not null)
    {

        @if (IsEdit)
        {
            <label for="signup" class="fw-bold">Sign Up Date</label>
        <input class="form-control name mb-2" id="signup" name="sign-up-date" type="text" value="@Company.Sign_Up" readonly/>
        }

        <label for="company-name" class="fw-bold">Company Name</label>
        <InputText @bind-Value="@Company.Name" class="form-control name mb-2" id="company-name" name="company-name" type="text" />

        <label for="id" class="fw-bold">Social Security Number or Federal I.D Number</label>
        <InputNumber @bind-Value="@Company.Fed_Id_SSN" id="id" class="form-control id mb-2" type="text" name="federal-id-or-ssn-number" />

        <label class="fw-bold" for="supp-cat">Supplier Category</label>
        <InputSelect @bind-Value="@Company.Supplier_Category" name="supplier-category" class="form-select supp-cat gray mb-2" id="supp-cat">
            <option value="" selected>Choose Supplier Category...</option>
            <option value="United States Entity">United States Entity</option>
            <option value="Foreign Entity">Foreign Entity</option>
        </InputSelect>

        <label for="web" class="fw-bold">Website</label>
        <InputText @bind-Value="@Company.Website" id="web" class="form-control web mb-2" name="website" type="text" />


        <label class="fw-bold" for="div-cert">Diversity Certification</label>
        <InputSelect @bind-Value="@Company.Diversity_Certification" name="diversity-certification" class="form-select div-cert gray mb-2" id="div-cert">
            <option value="" selected>Choose Diversity Certification...</option>
            <option value="Not Certified">Not Certified</option>
            <option value="City of Indianapolis">City of Indianapolis</option>
            <option value="State of Indiana">State of Indiana</option>
            <option value="NMSDC">NMSDC</option>
            <option value="WBENC">WBENC</option>
            <option value="Veteran's Administration">Veteran's Administration</option>
            <option class="other" value="Other">Other</option>
        </InputSelect>

        @if (Company.Diversity_Certification == "Other")
        {
            <label for="other-div-cert" class="fw-bold">Describe Diversity Certification</label>
            <InputText required @bind-Value="@Company.Other_Diversity_Certification" id="other-div-cert" class="form-control other-div-cert mb-2" type="text" name="other-description-of-diversity-certification" />
        }


        <label for="company-desc" class="fw-bold">Description of Goods and Services</label>
        <InputText @bind-Value="@Company.Description_Goods_Services" class="form-control name description mb-4" name="description-goods-services" id="company-desc" type="text" />

        @if (IsEdit)
        {
            @if (SaveCompanyInfoSuccess is not null)
            {
                <div class="alert alert-success">@SaveCompanyInfoSuccess</div>
            }
            @if (SaveCompanyInfoError is not null)
            {
                <div class="alert alert-danger">@SaveCompanyInfoError</div>
            }

            <button type="submit" class="btn btn-success btn-sm mb-3">Save Company Info</button>
        }
        else
        {
            <button type="submit" class="btn btn-primary mb-3">Next</button>

            <p>Note: Once you hit next, you won't be able to go back and edit information. You can log in to your account and make necessary edits after the registration is complete.</p>
        }
    }
</EditForm>




@code {
    [Parameter]
    public Company? Company { get; set; }

    [Parameter]
    public bool IsEdit { get; set; }

    [Parameter]
    public EventCallback<bool> OnSubmit { get; set; }

    [Parameter]
    public string? SaveCompanyInfoSuccess { get; set; }

    [Parameter]
    public string? SaveCompanyInfoError { get; set; }





    private async Task HandleCompanyComplete()
    {
        if (OnSubmit.HasDelegate)
        {
            await OnSubmit.InvokeAsync(true);
        }
    }

}
